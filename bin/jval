#!/bin/bash
#
# Validates an instance document against a JSON schema.
#

# JBOL modules path
JBOL='-L/usr/local/share/jbol'

# Options
set -o errexit -o noglob -o nounset -o pipefail

# This script name
declare -r SELF=${0##*/}
# JQ script
declare -r JQ=${0}.jq

#
declare -r METASCHEMA=/usr/local/share/jbol/schemata/schema.schema.json

# Show help
function help {
    cat <<EOF
${SELF} - validates a JSON document
Usage: ${SELF} [options] schema [file]

${SELF} validates against an schema a JSON instance document read from a file
or the standard input.

Options:
    -h, --help              Show this help
    -s, --schema            Validates JSON schema against the meta schema
EOF
    exit $(( $# == 0 ))
}

# Validates document
function validate {
    local schema=$1
    jq $JBOL                        \
        --from-file ${JQ}           \
        --raw-output                \
        --slurpfile SCHEMA $schema  \
        "$@"
}

# Entry point
function main {
    local -i metaschema=0

    local opt
    while getopts :hs-: opt; do
        case $opt in
            h) help ;;
            s) metaschema=1 ;;
            -) case $OPTARG in
                   help) help ;;
                   schema) metaschema=1 ;;
               esac
               ;;
        esac
    done

    shift $((OPTIND-1))
    (( $# > 0 )) || help

    local schema diagnostic
    if ((metaschema)); then
        [[ -e $METASCHEMA ]] ||
            { echo 1>&2 "Error: missing $METASCHEMA meta schema"; exit 1; }
        schema=$METASCHEMA
    else
        schema=$1; shift
    fi

    diagnostic=$(validate $schema "$@")
    if [[ -z $diagnostic ]]; then
        return 0
    else
        echo 1>&2 $diagnostic
        return 1
    fi
}

# Call main and exit
main "$@"

exit

# vim:syntax=sh:ai:sw=4:ts=4:et
