#########################################################################
# Alphabet operations and generated languages
#
# Tests are groups of three lines: program, input, expected output.
# Blank lines and lines starting with # are ignored.
#########################################################################

include "word/alphabet"; power(0)
"123"
""

include "word/alphabet"; limit(1;star)
"123"
""

include "word/alphabet"; power(0)
[1,2,3]
[]

include "word/alphabet"; [power(1)]
"123"
["1","2","3"]

include "word/alphabet"; [power(1)]
[1,2,3]
[[1],[2],[3]]

include "word/alphabet"; [power(2)]
[1,2,3]
[[1,1],[1,2],[1,3],[2,1],[2,2],[2,3],[3,1],[3,2],[3,3]]

include "word/alphabet"; [power(2)]
"123"
["11","12","13","21","22","23","31","32","33"]

include "word/alphabet"; limit(2;star)
"123"
""
"1"

include "word/alphabet"; limit(2;star)
[1,2]
[]
[1]

include "word/alphabet"; limit(1;star)
"123"
""

include "word/alphabet"; limit(1;star)
[1,2]
[]

include "word/alphabet"; limit(2;plus)
"123"
"1"
"2"

include "word/alphabet"; limit(2;plus)
[1,2]
[1]
[2]

include "word/alphabet"; limit(1;plus)
"123"
"1"

include "word/alphabet"; limit(1;plus)
[1,2]
[1]

include "word/alphabet"; [[limit(13;star)],["",limit(12;plus)]] | .[0]==.[1]
"123"
true

include "word/alphabet"; [[limit(13;star)],[[],limit(12;plus)]] | .[0]==.[1]
[1,2,3]
true

# vim:ai:sw=2:ts=2:et:syntax=jq
