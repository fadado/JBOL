#########################################################################
# Icon style scanner
#
# Tests are groups of three lines: program, input, expected output.
# Blank lines and lines starting with # are ignored.
#########################################################################

include "word/scanner"; meets([11,9,2,3]; .==[9])
0
# empty

include "word/scanner"; meets([9,2,3]; .==[9])
0
1

include "word/scanner"; match([9,2,3]; [9])
0
1

include "word/scanner"; [upto("one motion is optional"; "on")]
0
[0, 1, 5, 8, 9, 14, 18, 19]

include "word/scanner"; [upto("kaleidoscope"; "aeiou")]
0
[1, 3, 4, 6, 9, 11]


include "word/scanner"; notany("Asperger"; "aeiou")
0
1

include "word/scanner"; notany("Asperger"; "aeiou")
0
1

include "word/scanner"; any("asperger"; "aeiou")
0
1

include "word/scanner"; any("Asperger"; "aeiou")
0
# empty

include "word/scanner"; many_c("xxoops"; "aeiou")
0
2

include "word/scanner"; many_c("axixo"; "aeiou")
0
# empty

include "word/scanner"; many("oops"; "aeiou")
0
2

include "word/scanner"; many("xixo"; "aeiou")
0
# empty

#########################################################################

include "word/scanner"; [find("one motion is optional"; "on")]
0
[0, 8, 18]

include "word/scanner"; [find("mi mama me mima"; "ma")]
0
[3, 5, 13]

include "word/scanner"; [find("abaabbaaabbbaaaabbbb" ; "ab")]
0
[0, 3, 8, 15]

include "word/scanner"; [find("kaleidoscope"; "o")]
0
[6, 9]

# Factor, proper factor?

include "word/scanner"; match("mi mama me mima"; "mi ma")
0
5

include "word/scanner"; match("no se si mi mama me mima"; "mi ma")
9
14

include "word/scanner"; match([1,2, 3,4,2, 5]; [])
0
0

include "word/scanner"; match([1,2, 3,4,2, 5]; [1])
0
1

include "word/scanner"; match([]; [3,4,2])
0
# empty

include "word/scanner"; find([1,2, 3,4,2, 5]; [3,4,2])
0
2

include "word/scanner"; match([3,4,2,1,2]; [3,4,2])
0
3

include "word/scanner"; find([2,1,3,3,4,2]; [3,4,2])
0
3


include "word/scanner"; . as $s | range(0;$s|length) | . as $i | bal($s; "("; ")") | . as $j | $s[$i:$j]
"((A+(B*C))+D)"
"((A+(B*C))+D)"
"(A+(B*C))"
"(A+(B*C))+"
"(A+(B*C))+D"
"A"
"A+"
"A+(B*C)"
"+"
"+(B*C)"
"(B*C)"
"B"
"B*"
"B*C"
"*"
"*C"
"C"
"+"
"+D"
"D"

include "word/scanner"; [words_c("Hi there"; " \t")]
0
["Hi", "there"]

include "word/scanner"; [words_c("Hi there         "; " \t")]
0
["Hi", "there"]

include "word/scanner"; [words_c("          Hi there"; " \t")]
0
["Hi", "there"]

include "word/scanner"; [words_c("\t        Hi \t       there      "; " \t")]
0
["Hi", "there"]

include "word/scanner"; [words_c("a e i o u"; " \t")]
0
["a","e","i","o","u"]

include "word/scanner"; [words_c("         \t   "; " \t")]
0
[]

include "word/scanner"; [words("a e ae io aeiou o "; "aeiou")]
0
["a","e","ae","io","aeiou","o"]

include "word/scanner"; [numbers("1000 lala 12 be 13.2 so 7. 7.77 lele10lolo-33.33")]
0
[1e3, 12, 13.2, 7.0, 7.77, 10, -33.33]

# vim:ai:sw=2:ts=2:et:syntax=jq
