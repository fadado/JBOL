#########################################################################
# Generic array operations
#
# Tests are groups of three lines: program, input, expected output.
# Blank lines and lines starting with # are ignored.
#########################################################################

index(3)
[1,2,3,4,5]
2

reverse
[1,2,3,4,5]
[5,4,3,2,1]

include "array"; sorted
[1,9,3,4,5]
false

include "array"; sorted
[3]
true

include "array"; sorted
[]
true

include "array"; sorted
[1,2,3,4,5]
true

include "array"; unknown(2)
[1]
false

include "array"; false==has(2)
[1]
true

include "array"; unknown(2)
[1,3,null,4]
true

include "array"; false==has(2)
[1,3,null,4]
false

include "array"; remove(2)
[5,4,3]
[5,4,3]

include "array"; remove(2)
[5,2,4,3,2,2]
[5,4,3]

include "array"; evens
[0,1,2,3,4,5,6,7,8,9]
[0,2,4,6,8]

include "array"; odds
[0,1,2,3,4,5,6,7,8,9]
[1,3,5,7,9]

#
# zip
#

include "array";  zip([range(1)]; [range(0)])
null
[0,null]

include "array";  zip([range(0)]; [range(0)])
null
# empty

include "array";  [] | zip
null
# empty

include "array";  first(zip([range(10)]; [range(20;30)]))
null
[0,20]

include "array";  last(zip([range(5)]; [range(20;23)]))
null
[4,null]

include "array";  last([[range(5)], [range(20;23)]] | zip)
null
[4,null]

include "array";  nth(5; [[range(5)], [range(100)], [range(20;23)]] | zip)
null
[null,5,null]

# vim:ai:sw=2:ts=2:et:syntax=jq
