#########################################################################
# Bitwise operations
#
# Tests are groups of three lines: program, input, expected output.
# Blank lines and lines starting with # are ignored.
#########################################################################

########################################################################
# Low level private functions
########################################################################

include "math/bitwise"; [range(53)|_bit(.)|_pos(.)]==[range(53)]
null
true

include "math/bitwise"; _test(2;3)
null
true

include "math/bitwise"; _mask(2)
null
3

include "math/bitwise"; _test(1; _mask(4)) and _test(2; _mask(4)) and _test(4; _mask(4)) and _test(8; _mask(4)) and (_test(64; _mask(4))|not)
null
true

########################################################################
# Common LISP imported functions
########################################################################

include "math/bitwise"; [range(53)|lognot(lognot(.))] == [range(53)]
null
true

include "math/bitwise"; [logand(0;0),logand(0;1),logand(1;0),logand(1;1)]
null
[0,0,0,1]

include "math/bitwise"; [logior(0;0),logior(0;1),logior(1;0),logior(1;1)]
null
[0,1,1,1]

include "math/bitwise"; [logxor(0;0),logxor(0;1),logxor(1;0),logxor(1;1)]
null
[0,1,1,0]

include "math/bitwise"; [getbit(0;logeqv(0;0),logeqv(0;1),logeqv(1;0),logeqv(1;1))]
null
[1,0,0,1]

include "math/bitwise"; [getbit(0;lognand(0;0),lognand(0;1),lognand(1;0),lognand(1;1))]
null
[1,1,1,0]

include "math/bitwise"; [getbit(0;lognor(0;0),lognor(0;1),lognor(1;0),lognor(1;1))]
null
[1,0,0,0]

include "math/bitwise"; [getbit(0;logandc1(0;0),logandc1(0;1),logandc1(1;0),logandc1(1;1))]
null
[0,1,0,0]

include "math/bitwise"; [getbit(0;logandc2(0;0),logandc2(0;1),logandc2(1;0),logandc2(1;1))]
null
[0,0,1,0]

include "math/bitwise"; [getbit(0;logorc1(0;0),logorc1(0;1),logorc1(1;0),logorc1(1;1))]
null
[1,1,0,1]

include "math/bitwise"; [getbit(0;logorc2(0;0),logorc2(0;1),logorc2(1;0),logorc2(1;1))]
null
[1,0,1,1]

include "math/bitwise"; logtest(1;_mask(12))
null
true

include "math/bitwise"; [range(53)|logbitp(.;lognot(1+2+4+8+16+32))] == [range(53)|logbitp(.;1+2+4+8+16+32)|not]
null
true

include "math/bitwise"; ash(1;3)
null
6

include "math/bitwise"; ash(-1;6)
null
3

include "math/bitwise"; [[0,1,3,4,7,-1,-4,-7,-8][]|integer_length(.)] == [0,1,2,3,3,0,2,3,3]
null
true

include "math/bitwise"; integer_length(_mask(.)) == .
53
true

include "math/bitwise"; logcount(_mask(.)) == .
3
true

include "math/bitwise"; logcount(_mask(.)) == .
50
true

########################################################################
# Bitset operations
########################################################################

include "math/bitwise"; getbit(0;7) + getbit(1;7) + getbit(2;7) + getbit(3;7) + getbit(11;7)
null
3

include "math/bitwise"; setbit(3;0)
null
8

include "math/bitwise"; setbit(3;clrbit(3;-1))
null
-1

include "math/bitwise"; clrbit(1;7)
null
5

include "math/bitwise"; setbit(1;clrbit(1;-1))
null
-1

include "math/bitwise"; tglbit(1;7)
null
5

include "math/bitwise"; tglbit(1;5)
null
7
#
# vim:ai:sw=2:ts=2:et:syntax=jq
