#########################################################################
# Bitwise operations
#
# Tests are groups of three lines: program, input, expected output.
# Blank lines and lines starting with # are ignored.
#########################################################################

########################################################################

include "math/bitwise"; (53|exp2-1) as $universe | [range(53)|exp2]|add == $universe
null
true

include "math/bitwise"; (53|exp2-1) as $universe | [range(53)] == [positions($universe)]
null
true

include "math/bitwise"; mask(2)
null
3

include "math/bitwise"; getbit(0;7) + getbit(1;7) + getbit(2;7) + getbit(3;7) + getbit(11;7)
null
3

include "math/bitwise"; setbit(3;0)
null
8

include "math/bitwise"; setbit(3;clrbit(3;-1))
null
-1

include "math/bitwise"; clrbit(1;7)
null
5

include "math/bitwise"; setbit(1;clrbit(1;-1))
null
-1

include "math/bitwise"; tglbit(1;7)
null
5

include "math/bitwise"; tglbit(1;5)
null
7

########################################################################
# Common LISP imported functions
########################################################################

include "math/bitwise"; [range(53)|lognot(lognot(.))] == [range(53)]
null
true

include "math/bitwise"; [logand(0;0),logand(0;1),logand(1;0),logand(1;1)]
null
[0,0,0,1]

include "math/bitwise"; [logior(0;0),logior(0;1),logior(1;0),logior(1;1)]
null
[0,1,1,1]

include "math/bitwise"; [logxor(0;0),logxor(0;1),logxor(1;0),logxor(1;1)]
null
[0,1,1,0]

include "math/bitwise"; [getbit(0;logeqv(0;0),logeqv(0;1),logeqv(1;0),logeqv(1;1))]
null
[1,0,0,1]

include "math/bitwise"; [getbit(0;lognand(0;0),lognand(0;1),lognand(1;0),lognand(1;1))]
null
[1,1,1,0]

include "math/bitwise"; [getbit(0;lognor(0;0),lognor(0;1),lognor(1;0),lognor(1;1))]
null
[1,0,0,0]

include "math/bitwise"; [getbit(0;logandc1(0;0),logandc1(0;1),logandc1(1;0),logandc1(1;1))]
null
[0,1,0,0]

include "math/bitwise"; [getbit(0;logandc2(0;0),logandc2(0;1),logandc2(1;0),logandc2(1;1))]
null
[0,0,1,0]

include "math/bitwise"; [getbit(0;logorc1(0;0),logorc1(0;1),logorc1(1;0),logorc1(1;1))]
null
[1,1,0,1]

include "math/bitwise"; [getbit(0;logorc2(0;0),logorc2(0;1),logorc2(1;0),logorc2(1;1))]
null
[1,0,1,1]

include "math/bitwise"; logtest(1;mask(12))
null
true

include "math/bitwise"; [range(53)|logbitp(.;lognot(1+2+4+8+16+32))] == [range(53)|logbitp(.;1+2+4+8+16+32)|not]
null
true

include "math/bitwise"; ash(1;3)
null
6

include "math/bitwise"; ash(-1;6)
null
3

include "math/bitwise"; [[0,1,3,4,7,-1,-4,-7,-8][]|integer_length(.)] == [0,1,2,3,3,0,2,3,3]
null
true

include "math/bitwise"; integer_length(mask(.)) == .
53
true

include "math/bitwise"; logcount(mask(.)) == .
3
true

include "math/bitwise"; logcount(mask(.)) == .
50
true

# byte...

include "math/bitwise"; byte_size(byte(10;20))
null
10

include "math/bitwise"; byte_position(byte(10;20))
null
20

include "math/bitwise"; deposit_field(7; byte(2;1); 0e0)
null
6

include "math/bitwise"; deposit_field(mask(53); byte(4;0); 0e0)
null
15


include "math/bitwise"; ldb(byte(4;4); mask(10))
null
15

include "math/bitwise"; ldb(byte(4;4); mask(10))
null
15

include "math/bitwise"; ldb_test(byte(4;4); mask(8))
null
true

include "math/bitwise"; mask_field(byte(1;5); mask(53))
null
32

include "math/bitwise"; mask_field(byte(4;4); mask(8))
null
240

include "math/bitwise"; dpb(15; byte(4;4); 128)
null
240

include "math/bitwise"; dpb(1; byte(1;10); 0e0)
null
1024

include "math/bitwise"; dpb(mask(53)-1; byte(2;10); 0e0)
null
2048

include "math/bitwise"; dpb(1; byte(2;10); 2048)
null
1024

# vim:ai:sw=2:ts=2:et:syntax=jq
