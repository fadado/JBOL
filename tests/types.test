#########################################################################
# Types
#
# Tests are groups of three lines: program, input, expected output.
# Blank lines and lines starting with # are ignored.
#########################################################################

include "types"; isscalar
null
true

include "types"; schema
null
{"type": "null"}

include "types"; schema
false
{"type": "boolean"}

include "types"; schema
12.3
{"type": "number"}

include "types"; schema
"Hello"
{"type": "string"}

include "types"; schema
[]
{"type": "array"}

include "types"; schema
[1]
{"type": "array", "items": {"type": "number"}}

include "types"; schema
[1, false]
{"type": "array", "items": [{"type": "number"},{"type": "boolean"}]}

include "types"; schema
{}
{"type": "object"}

include "types"; schema
{"p": 1}
{"type": "object", "properties": {"p": {"type": "number"}}}

include "types"; schema
{"p": 1, "q": [1]}
{"type": "object", "properties": {"p": {"type": "number"}, "q": {"type": "array", "items": {"type": "number"}}}}

include "types"; schema
{"p": 1, "q": [[1]]}
{"type":"object","properties":{"p":{"type":"number"},"q":{"type":"array","items":{"type":"array","items":{"type":"number"}}}}}

include "types"; schema
{"id": 1, "name": "A green door", "price": 12.50, "tags": ["home","green"]}
{"type":"object","properties":{"id":{"type":"number"},"name":{"type":"string"},"price":{"type":"number"},"tags":{"type":"array","items":{"type":"string"}}}}

include "types"; valid({})
null
true

include "types"; valid({})
true
true

include "types"; valid({})
2134.234
true

include "types"; valid({})
"lele"
true

include "types"; valid({"type":"null"})
null
true

include "types"; valid({"type":"boolean"})
false
true

include "types"; valid({"type":"integer"})
123.123
false

include "types"; valid({"type":"integer"})
123
true

include "types"; valid({"type":"number"})
123.123
true

include "types"; valid({"type":"string"})
"lala"
true

include "types"; valid({"type":"object", "properties":{"a":{},"b":{}}})
{"a":1,"b":true}
true

include "types"; valid({"type":"object", "properties":{"a":{"type":"integer"},"b":{"type":"boolean"}}})
{"a":1,"b":true}
true

include "types"; valid({"type":"object", "properties":{"a":{"type":"integer"}}})
{"a":1,"b":true}
true

include "types"; valid({"enum":["yes","no"]})
"yes"
true

include "types"; valid({"enum":["yes","no"]})
"si"
false

include "types"; valid({"not": {"enum":["yes","no"]}})
"si"
true

include "types"; valid({"allOf":[{"type":"number"},{"enum":[234,123]}]})
123
true

include "types"; valid({"oneOf":[{"type":"number"},{"enum":[234,123]}]})
123
false

include "types"; valid({"anyOf":[{"type":"number"},{"enum":[234,123]}]})
123
true

include "types"; valid({"anyOf":[{"type":"number"},{"enum":[234,123]}]})
1234
true

include "types"; valid({"one":[{"type":"number"},{"enum":[234,123]}]})
1234
true

# vim:ai:sw=2:ts=2:et:syntax=jq
