# Tests are groups of three lines: program, input, expected output.
# Blank lines and lines starting with # are ignored.

#########################################################################
# Series
#
# Some basic arithmetic series as infinite streams.
#########################################################################

# Fibonacci
include "lib/series"; include "lib/stream"; [take(21; fibonacci)]
null
[0,1,1,2,3,5,8,13,21,34,55,89,144,233,377,610,987,1597,2584,4181,6765]

include "lib/series"; nth(70; fibonacci)
null
190392490709135

include "lib/series"; include "lib/stream"; take(2; drop(70; fibonacci))
null
190392490709135
308061521170129

# Golden ratio
include "lib/series"; include "lib/stream"; [take(2; drop(70; fibonacci))] | (.[1]/.[0])*100000|floor|./100000
null
1.61803

# Powers of `n`
include "lib/series"; include "lib/stream"; [take(10; powers(.))]
2
[1,2,4,8,16,32,64,128,256,512]

include "lib/series"; include "lib/stream"; nth(10; powers(.)) == pow(.; 10)
7
true

# Factorial
include "lib/series"; include "lib/stream"; [take(6; factorial)]
null
[1,1,2,6,24,120]

# Infinite integer series
include "lib/series"; include "lib/stream"; [take(6; from(7))]
null
[7,8,9,10,11,12]

include "lib/series"; include "lib/stream"; [take(6; fromBy(7;2))]
null
[7,9,11,13,15,17]

include "lib/series"; include "lib/stream"; [take(6; fromBy(0;-1))]
null
[0,-1,-2,-3,-4,-5]

# vim:ai:sw=2:ts=2:et:syntax=python
