#########################################################################
# Music
#
# Tests are groups of three lines: program, input, expected output.
# Blank lines and lines starting with # are ignored.
#########################################################################

#########################################################################
# pitch-class sets

include "music/pitch-class-set"; member(7)
[0,1,2,3,4,5,6,7,8,9,10,11]
true

include "music/pitch-class-set"; member(7)
[0,1,2,11]
false

include "music/pitch-class-set"; complement
[0,2,4,5,7,9,11]
[1,3,6,8,10]

include "music/pitch-class-set"; union([1,3,6,8,10])
[0,2,4,5,7,9,11]
[0,1,2,3,4,5,6,7,8,9,10,11]

include "music/pitch-class-set"; intersection([1,3,6,8,10])
[0,2,4,5,7,9,11]
[]

include "music/pitch-class-set"; intersection([1,3,6,8,10])
[0,1,2,3,4,5,6,7,8,9,10,11]
[1,3,6,8,10]

include "music/pitch-class-set"; subset([0,1,2,3,4,5,6,7,8,9,10,11])
[1,3,6,8,10]
true

include "music/pitch-class-set"; subset([1,2,3,4])
[1,3,5]
false

include "music/pitch-class-set"; transpositions
[0,2,4,5,7,9,11]
12

include "music/pitch-class-set"; [range(12)] | format
null
"0123456789te"

include "music/pitch-class-set"; retrograde
[1,2,3,4,5]
[5,4,3,2,1]

include "music/pitch-class-set"; rotate(1)
[1,2,3,4,5]
[2,3,4,5,1]

include "music/pitch-class-set"; rotate(-1)
[1,2,3,4,5]
[5,1,2,3,4]

include "music/pitch-class-set"; ordered
[1,9,3,4,5]
false

include "music/pitch-class-set"; ordered
[3]
true

include "music/pitch-class-set"; ordered
[]
true

include "music/pitch-class-set"; ordered
[1,2,3,4,5]
true

# vim:ai:sw=2:ts=2:et:syntax=jq
