#########################################################################
# Regex functions
#
# Tests are groups of three lines: program, input, expected output.
# Blank lines and lines starting with # are ignored.
#########################################################################

# search
include "string/re"; match("a")|tostr
"----a---"
"a"

include "string/re"; search("a")|tostr
"----a---"
"a"

include "string/re"; [match("a";"g")|tostr]
"-a-a-a-a-"
["a","a","a","a"]

include "string/re"; [search("a";"g")|tostr]
"-a-a-a-a-"
["a","a","a","a"]

include "string/re"; match("([abc])";"g")|tolist
"abc"
["a","a"]
["b","b"]
["c","c"]

include "string/re"; search("([abc])";"g")|tolist
"abc"
["a","a"]
["b","b"]
["c","c"]

include "string/re"; match("(?<p>[abc])";"g")|tomap
"-a-"
{"p":"a"}

# split
include "string/re"; [split]
"a   b  \tc"
["a","b","c"]

include "string/re"; [split]
"  a b c  "
["a","b","c"]

include "string/re"; [split("b")]
"abc"
["a","c"]

include "string/re"; ./""
"abc"
["a","b","c"]

include "string/re"; ./","
"a,b,c"
["a","b","c"]

include "string/re"; ./","
",a,b,c,"
["","a","b","c",""]

include "string/re"; [split(",")]
",,a,b,c,"
["","","a","b","c",""]

include "string/re"; [split(",")]
"a,b,c"
["a","b","c"]

include "string/re"; split(",";-1)
"a,b,c"
# empty

include "string/re"; [split(",";0)]
"a,b,c"
["a,b,c"]

include "string/re"; [split(",";1)]
"a,b,c"
["a","b,c"]

include "string/re"; [split(",";2)]
"a,b,c"
["a","b","c"]

include "string/re"; [split(",";3)]
"a,b,c"
["a","b","c"]

include "string/re"; [split(",";4)]
"a,b,c"
["a","b","c"]

include "string/re"; [split(",")]
"a,b,c"
["a","b","c"]

include "string/re"; include "string"; [rstrip(",")|split(",")]
"a,b,c,,,"
["a","b","c"]

include "string/re"; [split(",")]
"a,b,c,,,"
["a","b","c","","",""]

include "string/re"; [split("")]!=(./"")
"abc"
true

include "string/re"; [split("-|,"; 3)]
"1-10,20"
["1","10","20"]

include "string/re"; [split("(-|,)"; 3)]
"1-10,20"
["1","-","10",",","20"]

include "string/re"; [split("-|(,)")]
"1-10,20"
["1",null,"10",",","20"]

include "string/re"; [split("(-)|,"; 3)]
"1-10,20"
["1","-","10",null,"20"]

include "string/re"; [split("(-)|(,)")]
"1-10,20"
["1","-",null,"10",null,",","20"]

# sub

include "string/re"; sub("a";"b")
"aeiouae"
"beiouae"

include "string/re"; gsub("a";"b")
"aeiouae"
"beioube"

include "string/re"; gsub("(?<n>\\d+)";"\(.n)1")
"12a34b56"
"121a341b561"

include "string/re"; sub("\\d+";"\((.["&"]|tonumber)*2)")
"abc123xyz"
"abc246xyz"

include "string/re"; sub("[Ll][Oo][Nn][Dd][Oo][Nn]";"London")
"londOn"
"London"

include "string/re"; gsub("(?<c>[A-Z])";":\(.c):")
"Lord Whopper of Fibbing"
":L:ord :W:hopper of :F:ibbing"

include "string/re"; gsub("(?<f>.)(?<m>.*)(?<l>.)";"\(.l)\(.m)\(.f)")
"Aasdfas iao sdjladsj asjdZ"
"Zasdfas iao sdjladsj asjdA"

# BREAK(",")
include "string/re"; [match("([^,]+)(?:,|)";"g")|tostr]
"a,b,cde,f,gh,i"
["a","b","cde","f","gh","i"]

include "string/re"; [match("([^,]+),?";"g")|tostr]
"a,b,cde,f,gh,i,"
["a","b","cde","f","gh","i"]

include "string/re"; [match("([^,]+),|([^,]+)";"g")|tostr]
"a,b,cde,f,gh,i,"
["a","b","cde","f","gh","i"]

include "string/re"; [match("([^,]+),|([^,]+)";"g")|tostr]
"a,b,cde,f,gh,i"
["a","b","cde","f","gh","i"]

# vim:ai:sw=2:ts=2:et:syntax=jq
